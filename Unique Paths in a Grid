
class Solution {
  public:
  int mod = 1e9 + 7;
    
    int dfs(int i,int j,vector<vector<int>> &grid,int row,int col,vector<vector<int>> &dp)
    {
        if(i==row-1 && j==col-1) 
        {
            return 1;
        }
        if(i>=row||j>=col||grid[i][j]!=1) 
        return 0;
        
        if(dp[i][j]!=-1) return dp[i][j];
        int a = dfs(i+1,j,grid,row,col,dp);
        int b = dfs(i,j+1,grid,row,col,dp);
        
        return dp[i][j] = (a + b)%mod;
    }
  
  
  
    int uniquePaths(int n, int m, vector<vector<int>> &grid) {
        // code here
        if(grid[0][0]==0 || grid[n-1][m-1]==0) return 0;
        vector<vector<int>> dp(n+1,vector<int>(m+1,-1));
        return dfs(0,0,grid,n,m,dp);
    }
};
