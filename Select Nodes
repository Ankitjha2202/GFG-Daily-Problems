
class Solution{
  public:
    vector<int>vis;
    int count=0;
    bool dfs(vector<int>adj[],int i){
        vis[i]=1;
        bool select = false;
        for(auto childs:adj[i]){
            if(!vis[childs] && !dfs(adj,childs))
            {
                select=true;
            }
        }
        if(select){
            count++;
        }
        return select;
    }
    int countVertex(int n, vector<vector<int>>edges){
        vector<int> graph[n];
        vis=vector<int>(n,0);
        for(auto &it:edges){
            graph[it[0]-1].push_back(it[1]-1);
            graph[it[1]-1].push_back(it[0]-1);
        }
        dfs(graph,0);
        return count;
    }
};
