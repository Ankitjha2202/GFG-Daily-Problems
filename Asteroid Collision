//{ Driver Code Starts
#include <bits/stdc++.h>
using namespace std;


// } Driver Code Ends
class Solution {
  public:
    vector<int> asteroidCollision(int n, vector<int> &a) {
      stack<int> s;
        for(int i=0;i<n;i++){
            if(a[i]>0 || s.empty()){
                s.push(a[i]);
            }
            else{
                while(true){
                    int t=s.top();
                    if(t<0){
                     s.push(a[i]);
                        break;
                    }
                    else if(t==-a[i]){
                        s.pop();
                        break;
                    }else if(t>-a[i]){
                        break;
                    }else{
                        s.pop();
                        if(s.empty()){
                            s.push(a[i]);
                            break;
                        }
                    }
                }
            }
        }
        vector<int> res(s.size());
        for(int i = (int)s.size() - 1; i >= 0; i--) {
            res[i] = s.top();
            s.pop();
        }
        return res;
    }
};

//{ Driver Code Starts.

int main() {
    int t;
    cin >> t;
    while (t--) {
        int N;
        cin >> N;

        vector<int> asteroids(N);
        for (int i = 0; i < N; i++) cin >> asteroids[i];

        Solution obj;
        vector<int> ans = obj.asteroidCollision(N, asteroids);
        for (auto &it : ans) cout << it << ' ';
        cout << endl;
    }
    return 0;
}
// } Driver Code Ends
